{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Documents/Csc350%20pj1/musicv.3/src/lib/firebase.js"],"sourcesContent":["// lib/firebase.js (หรือ src/lib/firebase.js)\r\n\r\nimport { initializeApp, getApps, getApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDjKfFO7maPIOF8BspiU1wkLNgV9ipffNs\",\r\n  authDomain: \"testmusic-79383.firebaseapp.com\",\r\n  projectId: \"testmusic-79383\",\r\n  storageBucket: \"testmusic-79383.firebasestorage.app\",\r\n  messagingSenderId: \"198991673510\",\r\n  appId: \"1:198991673510:web:0a16a620d9b5d1805adc67\",\r\n  measurementId: \"G-5EW3XYPVR5\"\r\n};\r\n\r\n// Initialize Firebase App (ป้องกันการ init ซ้ำ)\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\n\r\n// Initialize Firebase Services\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\n\r\n// -------- นี่คือบรรทัดที่สำคัญ --------\r\n// Export สิ่งที่ต้องการให้ไฟล์อื่นนำไปใช้\r\nexport { app, auth, db };\r\n// -------------------------------------"],"names":[],"mappings":"AAAA,6CAA6C;;;;;;AAE7C;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,gDAAgD;AAChD,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AAErE,+BAA+B;AAC/B,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;;CAKxB,wCAAwC","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Documents/Csc350%20pj1/musicv.3/src/app/page.js"],"sourcesContent":["/* eslint-disable @next/next/no-img-element */\n/* eslint-disable react/no-unescaped-entities */\n\"use client\";\n\nimport { useEffect, useState, useMemo } from \"react\";\n// --- Firebase Imports ---\nimport { collection, getDocs, query, where, orderBy } from 'firebase/firestore'; // เพิ่ม query, where, orderBy\nimport { db } from '@/lib/firebase';\n\n// --- Main Component ---\nexport default function AlbumMusicPlayer() { // เปลี่ยนชื่อ Component\n  // --- State Declarations ---\n  const [allAlbums, setAllAlbums] = useState([]); // State สำหรับเก็บข้อมูลอัลบั้มทั้งหมด\n  const [albumSongs, setAlbumSongs] = useState([]); // State สำหรับเก็บเพลงในอัลบั้มที่เลือก\n  const [selectedAlbum, setSelectedAlbum] = useState(null); // State เก็บอัลบั้มที่กำลังดูอยู่\n  const [playlist, setPlaylist] = useState([]); // เพลย์ลิสต์ส่วนตัวยังคงอยู่\n\n  // Player State\n  const [activeYoutubeId, setActiveYoutubeId] = useState(null);\n  const [currentSongInfo, setCurrentSongInfo] = useState(null);\n  const [isPlayingFromPlaylist, setIsPlayingFromPlaylist] = useState(false); // แยกการเล่นจาก Playlist ส่วนตัว\n  const [currentPlaylistIndex, setCurrentPlaylistIndex] = useState(-1);\n\n  // UI State\n  const [isLoadingAlbums, setIsLoadingAlbums] = useState(false);\n  const [isLoadingSongs, setIsLoadingSongs] = useState(false); // Loading state สำหรับเพลงในอัลบั้ม\n  const [error, setError] = useState(null);\n\n  // --- Effects ---\n\n  // Effect 1: Fetch Albums & Load Playlist on initial mount\n  useEffect(() => {\n    // Function to fetch all albums\n    const fetchAlbums = async () => {\n      setIsLoadingAlbums(true);\n      setError(null);\n      try {\n        const albumsCollectionRef = collection(db, 'albums');\n        // Optionally order albums, e.g., by releaseYear descending\n        // const q = query(albumsCollectionRef, orderBy(\"releaseYear\", \"desc\"));\n        const albumSnapshot = await getDocs(albumsCollectionRef); // or getDocs(q)\n        const albumList = albumSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        if (Array.isArray(albumList)) {\n          setAllAlbums(albumList);\n        } else {\n          throw new Error(\"Invalid album data format.\");\n        }\n      } catch (err) {\n        console.error(\"Firebase fetch albums error:\", err);\n        setError(err.message || \"Failed to load albums.\");\n        setAllAlbums([]);\n      } finally {\n        setIsLoadingAlbums(false);\n      }\n    };\n\n    // Function to load personal playlist\n    const loadPlaylist = () => {\n      const savedPlaylist = localStorage.getItem(\"musicPlaylist\");\n      // ... (โค้ด loadPlaylist เหมือนเดิม) ...\n      if (savedPlaylist) {\n        try {\n          const parsedPlaylist = JSON.parse(savedPlaylist);\n          if (Array.isArray(parsedPlaylist)) {\n            const validated = parsedPlaylist.filter(item =>\n              item && typeof item === 'object' && item.youtubeLink && item.songTitle && getYoutubeId(item.youtubeLink)\n            ).map(item => ({\n              ...item,\n              songTitle: item.songTitle || 'Unknown Title',\n              bandName: item.bandName || 'Unknown Artist'\n            }));\n            setPlaylist(validated);\n          } else { localStorage.removeItem(\"musicPlaylist\"); }\n        } catch (e) { localStorage.removeItem(\"musicPlaylist\"); }\n      }\n    };\n\n    fetchAlbums();\n    loadPlaylist();\n  }, []);\n\n  // Effect 2: Fetch Songs when an album is selected\n  useEffect(() => {\n    const fetchSongsForAlbum = async () => {\n      if (!selectedAlbum || !selectedAlbum.id) {\n        setAlbumSongs([]); // Clear songs if no album is selected\n        return;\n      }\n      setIsLoadingSongs(true);\n      setError(null);\n      try {\n        const songsCollectionRef = collection(db, 'songs');\n        // Query songs where albumId matches the selected album's ID\n        // Order by trackNumber if available\n        const q = query(\n          songsCollectionRef,\n          where(\"albumId\", \"==\", selectedAlbum.id),\n          orderBy(\"trackNumber\", \"asc\") // 'asc' for ascending order (1, 2, 3...)\n        );\n        const songSnapshot = await getDocs(q);\n        const songList = songSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        if (Array.isArray(songList)) {\n          setAlbumSongs(songList);\n        } else {\n          throw new Error(\"Invalid song data format for album.\");\n        }\n      } catch (err) {\n        console.error(`Firebase fetch songs error for album ${selectedAlbum.id}:`, err);\n        setError(err.message || `Failed to load songs for album \"${selectedAlbum.title}\".`);\n        setAlbumSongs([]);\n      } finally {\n        setIsLoadingSongs(false);\n      }\n    };\n\n    fetchSongsForAlbum();\n  }, [selectedAlbum]); // Re-run this effect when selectedAlbum changes\n\n  // Effect 3: Save personal playlist to localStorage\n  useEffect(() => {\n    // ... (โค้ด save playlist เหมือนเดิม) ...\n    if (Array.isArray(playlist)) {\n      if (playlist.length > 0) {\n        localStorage.setItem(\"musicPlaylist\", JSON.stringify(playlist));\n      } else {\n        localStorage.removeItem(\"musicPlaylist\");\n      }\n    }\n  }, [playlist]);\n\n  // Effect 4: Update current song info for the mini player\n  useEffect(() => {\n    // ... (โค้ด update currentSongInfo เหมือนเดิม, แต่อาจต้องหาใน albumSongs ด้วย) ...\n    if (!activeYoutubeId) {\n      setCurrentSongInfo(null); return;\n    }\n    let foundSong = null;\n    // 1. Check current playlist context first\n    if (isPlayingFromPlaylist && currentPlaylistIndex >= 0 && currentPlaylistIndex < playlist.length) {\n      const plSong = playlist[currentPlaylistIndex];\n      if (plSong && getYoutubeId(plSong.youtubeLink) === activeYoutubeId) foundSong = plSong;\n    }\n    // 2. Check currently viewed album songs (if not found in playlist context)\n    if (!foundSong && selectedAlbum && Array.isArray(albumSongs)) {\n      foundSong = albumSongs.find(song => song && song.youtubeLink && getYoutubeId(song.youtubeLink) === activeYoutubeId);\n    }\n    // 3. Fallback: search the personal playlist again (covers edge cases)\n    if (!foundSong && Array.isArray(playlist)) {\n      foundSong = playlist.find(song => song && song.youtubeLink && getYoutubeId(song.youtubeLink) === activeYoutubeId);\n    }\n    // 4. Fallback: search allSongs (should ideally not be needed if UI flow is right)\n    // if (!foundSong && Array.isArray(allSongs)) {\n    //     foundSong = allSongs.find(song => song && song.youtubeLink && getYoutubeId(song.youtubeLink) === activeYoutubeId);\n    // }\n\n    setCurrentSongInfo(foundSong ? {\n      id: foundSong.id || null,\n      songTitle: foundSong.songTitle || 'Unknown Title',\n      bandName: foundSong.bandName || 'Unknown Artist',\n      youtubeLink: foundSong.youtubeLink,\n      albumTitle: foundSong.albumTitle || selectedAlbum?.title || null, // Include album title\n      // Include coverUrl for mini player?\n      coverUrl: foundSong.coverUrl || selectedAlbum?.coverUrl || null,\n    } : null);\n\n  }, [activeYoutubeId, selectedAlbum, albumSongs, playlist, isPlayingFromPlaylist, currentPlaylistIndex]);\n\n\n  // --- Helper Functions ---\n  const getYoutubeId = (url) => { /* ... เหมือนเดิม ... */\n    if (!url || typeof url !== 'string') return null;\n    const regExp = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regExp);\n    if (match && match[1]) return match[1];\n    if (!url.includes(\"http\") && url.length >= 11 && !url.includes(\" \")) return url;\n    return null;\n  };\n  const getThumbnailUrl = (youtubeId, size = 'default') => { /* ... ปรับขนาดได้ ... */\n    if (!youtubeId) return `/api/placeholder/${size === 'mqdefault' ? '320/180' : '120/90'}`;\n    return `https://img.youtube.com/vi/${youtubeId}/${size}.jpg`; // default, mqdefault, hqdefault\n  };\n\n  // --- Action Handlers ---\n\n  // Select an album to view its songs\n  const handleSelectAlbum = (album) => {\n    setSelectedAlbum(album);\n    // When selecting an album, we are no longer playing specifically 'from the playlist' context\n    // But don't stop playback if a song is already playing.\n    // setIsPlayingFromPlaylist(false); // อาจจะไม่ต้อง reset ที่นี่ ขึ้นอยู่กับ UX ที่ต้องการ\n    // setCurrentPlaylistIndex(-1);\n    setError(null); // Clear errors when navigating\n  };\n\n  // Go back from song list to album list\n  const handleBackToAlbums = () => {\n    setSelectedAlbum(null);\n    setAlbumSongs([]); // Clear the songs\n    setError(null);\n  };\n\n  // Play a song (can be from album list or personal playlist)\n  const handlePlaySong = (songData, fromPlaylist = false, index = -1) => {\n    if (!songData || !songData.youtubeLink) {\n      setError(\"Missing song data or YouTube link.\"); return;\n    }\n    const youtubeId = getYoutubeId(songData.youtubeLink);\n    if (youtubeId) {\n      setActiveYoutubeId(youtubeId);\n      setIsPlayingFromPlaylist(fromPlaylist); // สำคัญ: ตั้งค่าว่าเล่นจากไหน\n      setCurrentPlaylistIndex(fromPlaylist ? index : -1); // ตั้ง index ถ้าเล่นจาก playlist\n      setError(null);\n    } else {\n      setError(`Invalid YouTube link for \"${songData.songTitle || 'this song'}\".`);\n    }\n  };\n\n  // --- Playlist Handlers (เหมือนเดิม) ---\n  const handleAddToPlaylist = (songToAdd) => { /* ... เหมือนเดิม ... */\n    if (!songToAdd || typeof songToAdd !== 'object' || !songToAdd.youtubeLink || !songToAdd.songTitle) {\n      alert(\"Cannot add invalid song data to playlist.\"); return;\n    }\n    const songYoutubeId = getYoutubeId(songToAdd.youtubeLink);\n    if (!songYoutubeId) { alert(\"Invalid YouTube link, cannot add.\"); return; }\n    const alreadyExists = playlist.some(item => item && item.youtubeLink && getYoutubeId(item.youtubeLink) === songYoutubeId);\n    const title = songToAdd.songTitle || 'Unknown Title';\n    if (!alreadyExists) {\n      const entry = {\n        id: songToAdd.id || `local-${Date.now()}`,\n        songTitle: title,\n        bandName: songToAdd.bandName || 'Unknown Artist',\n        youtubeLink: songToAdd.youtubeLink,\n        albumTitle: songToAdd.albumTitle || selectedAlbum?.title || null, // เก็บชื่ออัลบั้มไปด้วย\n        // coverUrl: songToAdd.coverUrl || selectedAlbum?.coverUrl || null, // เก็บปกไปด้วยก็ได้\n      };\n      setPlaylist(prev => [...prev, entry]);\n      alert(`Added \"${title}\" to playlist.`);\n    } else { alert(`\"${title}\" is already in the playlist.`); }\n  };\n  const handleRemoveFromPlaylist = (index) => { /* ... เหมือนเดิม ... */\n    if (index < 0 || index >= playlist.length) return;\n    const songToRemove = playlist[index];\n    const title = songToRemove?.songTitle || 'This song';\n    const newPlaylist = playlist.filter((_, i) => i !== index);\n    setPlaylist(newPlaylist);\n    alert(`Removed \"${title}\" from playlist.`);\n    if (isPlayingFromPlaylist) {\n      if (index === currentPlaylistIndex) {\n        if (newPlaylist.length > 0) handlePlaySong(newPlaylist[index % newPlaylist.length], true, index % newPlaylist.length);\n        else handleStopPlayback();\n      } else if (index < currentPlaylistIndex) {\n        setCurrentPlaylistIndex(prev => prev - 1);\n      }\n    }\n  };\n  const handleClearPlaylist = () => { /* ... เหมือนเดิม ... */\n    if (playlist.length > 0 && confirm(\"Clear the entire playlist?\")) {\n      setPlaylist([]);\n      if (isPlayingFromPlaylist) handleStopPlayback();\n    }\n  };\n\n  // --- Player Controls (ทำงานกับ Playlist เท่านั้นในตอนนี้) ---\n  const handlePlayNext = () => {\n    if (!isPlayingFromPlaylist || playlist.length === 0) return;\n    const nextIndex = (currentPlaylistIndex + 1) % playlist.length;\n    handlePlaySong(playlist[nextIndex], true, nextIndex);\n  };\n  const handlePlayPrevious = () => {\n    if (!isPlayingFromPlaylist || playlist.length === 0) return;\n    const prevIndex = (currentPlaylistIndex - 1 + playlist.length) % playlist.length;\n    handlePlaySong(playlist[prevIndex], true, prevIndex);\n  };\n  const handleShufflePlay = () => { // เล่นเพลงสุ่มจาก Playlist ส่วนตัว\n    if (playlist.length === 0) return;\n    if (playlist.length === 1) { handlePlaySong(playlist[0], true, 0); return; }\n    let randomIndex;\n    do { randomIndex = Math.floor(Math.random() * playlist.length); } while (randomIndex === currentPlaylistIndex && playlist.length > 1);\n    handlePlaySong(playlist[randomIndex], true, randomIndex);\n  };\n  const handleStopPlayback = () => { /* ... เหมือนเดิม ... */\n    setActiveYoutubeId(null);\n    setIsPlayingFromPlaylist(false);\n    setCurrentPlaylistIndex(-1);\n  };\n\n  // --- Render Logic ---\n\n  // Function to render the list of albums\n  const renderAlbumList = () => (\n    <div>\n      <h2 style={styles.viewTitle}>Albums</h2>\n      {isLoadingAlbums && <div style={styles.loadingBox}>Loading albums...</div>}\n      {!isLoadingAlbums && allAlbums.length === 0 && <p>No albums found.</p>}\n      <div style={styles.albumGrid}>\n        {allAlbums.map((album) => (\n          <div key={album.id} style={styles.albumCard} onClick={() => handleSelectAlbum(album)}>\n            <img\n              src={album.coverUrl || '/https://via.placeholder.com/200'} // Provide a fallback\n              alt={album.title || 'Album cover'}\n              style={styles.albumCover}\n              loading=\"lazy\"\n            />\n            <div style={styles.albumInfo}>\n              <h3 style={styles.albumTitle} title={album.title}>{album.title}</h3>\n              <p style={styles.albumArtist} title={album.album_name}>{album.album_name}</p>\n              {album.releaseYear && <p style={styles.albumYear}>{album.releaseYear}</p>}\n            </div>\n            {/* Optional: Add a play button overlay */}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Function to render the songs within a selected album\n  const renderAlbumSongs = () => (\n    <div>\n      <button onClick={handleBackToAlbums} style={styles.backButton}>\n        ← Back to Albums\n      </button>\n      {/* Album Header */}\n      <div style={styles.albumDetailHeader}>\n        <img\n          src={selectedAlbum.coverUrl || '/https://via.placeholder.com/200'}\n          alt={selectedAlbum.title || ''}\n          style={styles.albumDetailCover}\n        />\n        <div>\n          <p style={{ fontSize: '0.8em', margin: 0, color: '#888' }}>ALBUM</p>\n          <h2 style={{ margin: '5px 0', fontSize: '1.8em' }}>{selectedAlbum.title}</h2>\n          <p style={{ margin: 0, color: '#555' }}>\n            {selectedAlbum.album_name}\n            {selectedAlbum.releaseYear && ` • ${selectedAlbum.releaseYear}`}\n          </p>\n          {/* Optional: Play album button */}\n          <button\n            onClick={() => albumSongs.length > 0 && handlePlaySong(albumSongs[0], false)} // Play first song of album\n            style={{ ...styles.actionButton, marginTop: '10px' }}\n            disabled={albumSongs.length === 0 || isLoadingSongs}\n          >\n            ▶️ Play Album\n          </button>\n        </div>\n      </div>\n\n      <h3 style={styles.viewTitle}>Tracklist</h3>\n      {isLoadingSongs && <div style={styles.loadingBox}>Loading songs...</div>}\n      {!isLoadingSongs && albumSongs.length === 0 && <p>No songs found in this album.</p>}\n\n      {/* Song List for the Album */}\n      <div style={styles.songList}>\n        {albumSongs.map((song, index) => {\n          if (!song || !song.youtubeLink || !song.songTitle) return null;\n          const youtubeId = getYoutubeId(song.youtubeLink);\n          // Check if this specific song instance is the one playing *and* it wasn't started from the personal playlist\n          const isActive = activeYoutubeId === youtubeId && !isPlayingFromPlaylist;\n\n          return (\n            <div\n              key={song.id || `albumsong-${index}`}\n              style={{ ...styles.songItem, ...(isActive ? styles.songItemActive : {}) }}\n            >\n              <div style={styles.trackNumber}>{song.trackNumber || index + 1}</div>\n              <div style={styles.songContent} onClick={() => handlePlaySong(song, false)} title={`Play ${song.songTitle}`}>\n                {/* No thumbnail needed here usually */}\n                <div style={styles.songInfo}>\n                  <h4 style={styles.songTitle}>{song.songTitle}</h4>\n                  {/* Artist name might be redundant here */}\n                  {/* <p style={styles.songArtist}>{song.bandName || selectedAlbum.album_name}</p> */}\n                </div>\n              </div>\n              <div style={styles.songActions}>\n                <button onClick={(e) => { e.stopPropagation(); handleAddToPlaylist(song); }} style={styles.actionIcon} title=\"Add to Playlist\">+</button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n  // --- Main Return ---\n  return (\n    <div style={{ ...styles.appContainer, paddingBottom: activeYoutubeId ? styles.miniPlayer.height : '0px' }}>\n\n      {/* Hidden iframe */}\n      {activeYoutubeId && (\n        <iframe key={activeYoutubeId} style={styles.hiddenIframe}\n          src={`https://www.youtube.com/embed/${activeYoutubeId}?autoplay=1&rel=0&modestbranding=1&iv_load_policy=3&playsinline=1`}\n          title=\"YouTube Audio Player\" frameBorder=\"0\" allow=\"autoplay\"></iframe>\n      )}\n\n      {/* Main Content Area */}\n      <div style={styles.mainContent}>\n        <div style={styles.header}>\n          <h1>🎶 Album Music Player</h1>\n          <button onClick={() => window.location.href = \"/login\"} style={styles.adminButton}>🔐 Admin</button>\n        </div>\n\n        {/* Error Display */}\n        {error && (<div style={styles.errorBox}><p>Error: {error}</p><button onClick={() => setError(null)} style={styles.errorDismiss}>✕</button></div>)}\n\n        {/* Conditional Rendering: Album List or Album Songs */}\n        {selectedAlbum ? renderAlbumSongs() : renderAlbumList()}\n\n        {/* Optional: Personal Playlist Toggle/View (can be added back here) */}\n        {/* <button onClick={() => setShowPlaylistView(!showPlaylistView)}>Toggle Playlist View</button> */}\n        {/* {showPlaylistView && renderPersonalPlaylist()} */}\n\n      </div>\n\n      {/* Mini Player (Fixed at Bottom) */}\n      {activeYoutubeId && currentSongInfo && (\n        <div style={styles.miniPlayer}>\n          <img src={getThumbnailUrl(activeYoutubeId, 'default')} alt=\"\" style={styles.miniPlayerThumbnail} />\n          <div style={styles.miniPlayerInfo}>\n            <div style={styles.miniPlayerTitle} title={currentSongInfo.songTitle}>{currentSongInfo.songTitle}</div>\n            <div style={styles.miniPlayerArtist} title={currentSongInfo.bandName}>{currentSongInfo.bandName}</div>\n          </div>\n          <div style={styles.miniPlayerControls}>\n            {/* Prev/Next only work for PERSONAL playlist context */}\n            {isPlayingFromPlaylist && playlist.length > 1 && (\n              <>\n                <button onClick={handlePlayPrevious} style={styles.miniPlayerButton} title=\"Previous (Playlist)\">⏮️</button>\n                <button onClick={handlePlayNext} style={styles.miniPlayerButton} title=\"Next (Playlist)\">⏭️</button>\n              </>\n            )}\n            <button onClick={handleStopPlayback} style={{ ...styles.miniPlayerButton, ...styles.miniPlayerCloseButton }} title=\"Close Player\">✕</button>\n          </div>\n        </div>\n      )}\n\n    </div> // End appContainer\n  );\n}\n\n// --- Inline Styles --- (เพิ่ม/ปรับปรุง styles ที่จำเป็น)\nconst styles = {\n  // ... (styles เดิมส่วนใหญ่ยังใช้ได้) ...\n  appContainer: { /* ... เหมือนเดิม ... */ fontFamily: 'sans-serif', backgroundColor: '#f0f2f5', minHeight: '100vh', position: 'relative' },\n  mainContent: { /* ... เหมือนเดิม ... */ maxWidth: '900px', margin: '0 auto', padding: '20px' }, // กว้างขึ้นเล็กน้อย\n  header: { /* ... เหมือนเดิม ... */ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px', borderBottom: '1px solid #e0e0e0', paddingBottom: '10px' },\n  adminButton: { /* ... เหมือนเดิม ... */ padding: '6px 12px', backgroundColor: '#6c757d', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer', fontSize: '0.9em' },\n  errorBox: { /* ... เหมือนเดิม ... */ backgroundColor: '#f8d7da', color: '#721c24', border: '1px solid #f5c6cb', padding: '10px 15px', margin: '15px 0', borderRadius: '4px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' },\n  errorDismiss: { /* ... เหมือนเดิม ... */ background: 'none', border: 'none', fontSize: '1.2em', color: '#721c24', cursor: 'pointer' },\n  loadingBox: { /* ... เหมือนเดิม ... */ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '40px', color: '#666', fontSize: '1.1em' },\n  spinner: { /* ... เหมือนเดิม ... */ border: '4px solid rgba(0, 0, 0, 0.1)', width: '24px', height: '24px', borderRadius: '50%', borderLeftColor: '#007bff', animation: 'spin 1s linear infinite', marginRight: '10px' },\n  viewTitle: { // Title for Album list / Tracklist\n    fontSize: '1.5em',\n    fontWeight: 'bold',\n    margin: '25px 0 15px 0',\n    color: '#333',\n  },\n  backButton: {\n    background: 'none',\n    border: 'none',\n    color: '#007bff',\n    cursor: 'pointer',\n    marginBottom: '15px',\n    fontSize: '1em',\n    display: 'inline-flex',\n    alignItems: 'center',\n    padding: '5px 0',\n    '&:hover': {\n      textDecoration: 'underline',\n    }\n  },\n\n  // Album Grid Styles\n  albumGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(160px, 1fr))', // Responsive grid\n    gap: '20px',\n  },\n  albumCard: {\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    overflow: 'hidden',\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n    cursor: 'pointer',\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: '0 6px 12px rgba(0,0,0,0.15)',\n    }\n  },\n  albumCover: {\n    width: '100%',\n    aspectRatio: '1 / 1', // Make it square\n    objectFit: 'cover',\n    display: 'block', // Remove extra space below image\n  },\n  albumInfo: {\n    padding: '10px',\n  },\n  albumTitle: {\n    fontSize: '1em',\n    fontWeight: 'bold',\n    margin: '0 0 4px 0',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  albumArtist: {\n    fontSize: '0.85em',\n    color: '#555',\n    margin: '0 0 4px 0',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  albumYear: {\n    fontSize: '0.75em',\n    color: '#888',\n    margin: 0,\n  },\n\n  // Album Detail Styles\n  albumDetailHeader: {\n    display: 'flex',\n    alignItems: 'flex-end', // Align bottom for text next to cover\n    gap: '25px',\n    marginBottom: '30px',\n    paddingBottom: '20px',\n    borderBottom: '1px solid #eee',\n  },\n  albumDetailCover: {\n    width: '150px',\n    height: '150px',\n    objectFit: 'cover',\n    borderRadius: '6px',\n    boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n    flexShrink: 0,\n  },\n  actionButton: { // Re-used style\n    padding: '6px 12px',\n    fontSize: '0.9em',\n    cursor: 'pointer',\n    borderRadius: '4px',\n    border: '1px solid #ccc',\n    backgroundColor: '#e9ecef',\n  },\n\n\n  // Song List Styles (minor adjustments maybe needed)\n  songList: { /* ... */ },\n  songItem: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#ffffff',\n    padding: '8px 12px',\n    marginBottom: '8px',\n    borderRadius: '6px',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.05)',\n    // --- แทนที่ shorthand 'borderLeft' ---\n    // ลบ: borderLeft: '4px solid transparent',\n    borderLeftWidth: '4px',      // <<< เพิ่ม\n    borderLeftStyle: 'solid',    // <<< เพิ่ม\n    borderLeftColor: 'transparent', // <<< เพิ่ม (สีเริ่มต้น)\n    // -----------------------------------\n    transition: 'background-color 0.2s ease, border-left-color 0.2s ease', // <<< แก้ transition ให้เจาะจง\n},\nsongItemActive: {\n    backgroundColor: '#e7f3ff',\n    borderLeftColor: '#007bff', // <<< ถูกต้องแล้ว (เปลี่ยนแค่สี)\n},\n\n    songContent: { /* ... เหมือนเดิม ... */ display: 'flex', alignItems: 'center', gap: '12px', cursor: 'pointer', flexGrow: 1, overflow: 'hidden' },\n    // songThumbnail is removed from album song list view\n    songInfo: { /* ... เหมือนเดิม ... */ overflow: 'hidden' },\n    songTitle: { /* ... เหมือนเดิม ... */ margin: '0 0 2px 0', fontSize: '1em', fontWeight: '500', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', color: '#333' },\n    songArtist: { /* ... เหมือนเดิม ... */ margin: 0, fontSize: '0.85em', color: '#666', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' },\n    songActions: { /* ... เหมือนเดิม ... */ flexShrink: 0, marginLeft: '10px' },\n    actionIcon: { /* ... เหมือนเดิม ... */ background: 'none', border: '1px solid #ccc', color: '#555', borderRadius: '50%', width: '26px', height: '26px', fontSize: '1em', lineHeight: '24px', textAlign: 'center', cursor: 'pointer', transition: 'all 0.2s ease' },\n    emptyListMessage: { /* ... เหมือนเดิม ... */ textAlign: 'center', color: '#888', padding: '30px 15px', fontSize: '0.95em' },\n\n    // Mini Player Styles (เหมือนเดิม)\n    miniPlayer: { position: 'fixed', bottom: 0, left: 0, right: 0, height: '65px', backgroundColor: '#282828', color: '#fff', display: 'flex', alignItems: 'center', padding: '0 15px', boxShadow: '0 -2px 10px rgba(0,0,0,0.3)', zIndex: 1000 },\n    miniPlayerThumbnail: { width: '45px', height: '45px', borderRadius: '4px', marginRight: '12px', objectFit: 'cover', flexShrink: 0 },\n    miniPlayerInfo: { flexGrow: 1, overflow: 'hidden', marginRight: '15px' },\n    miniPlayerTitle: { fontSize: '0.9em', fontWeight: '500', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' },\n    miniPlayerArtist: { fontSize: '0.8em', color: '#b3b3b3', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' },\n    miniPlayerControls: { display: 'flex', alignItems: 'center', gap: '10px', flexShrink: 0 },\n    miniPlayerButton: { background: 'none', border: 'none', color: '#b3b3b3', fontSize: '1.3em', cursor: 'pointer', padding: '5px', lineHeight: 1 },\n    miniPlayerCloseButton: { fontSize: '1.4em' },\n    hiddenIframe: { position: 'absolute', top: '-9999px', left: '-9999px', width: '1px', height: '1px' },\n\n    // Add keyframes for spinner\n    '@keyframes spin': { '0%': { transform: 'rotate(0deg)' }, '100%': { transform: 'rotate(360deg)' }, },\n  };\n// Apply keyframes using CSS file or library"],"names":[],"mappings":"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","debugId":null}}]
}